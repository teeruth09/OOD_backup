'''
Chapter : 9 - item : 5 - Sort Subset
 ส่งมาแล้ว 0 ครั้ง
ให้น้องรับ input มา 2 อย่างโดยคั่นด้วย /

1. ด้านซ้าย เป็นผลลัพธ์
2. ด้านขวา เป็น list ของจำนวนเต็ม

โดยผลลัพธ์ให้แสดงเป็น subset ของ input ด้านขวาที่มีผลรวมได้เท่ากับ input ด้านซ้าย และมี Pattern การแสดงผลลัพธ์ดังนี้

1. ให้เรียงลำดับจากขนาดของ subset จากน้อยไปมาก
2. ถ้าหาก subset มีขนาดเท่ากันให้เรียงลำดับจำนวนเต็มใน subset จากน้อยไปมาก

ถ้าหากไม่มี subset ไหนที่ผลรวมเท่ากับ input ด้านซ้าย ให้แสดงว่า No Subset



****** ห้ามใช้ Built-in Function ที่เกี่ยวกับ Sort ให้น้องเขียนฟังก์ชัน Sort เอง และห้าม Import

อธิบาย Test Case 1:

[2]
[-1, 3]
[0, 2]  # [-1, 3] กับ [0, 2] มีขนาดเท่ากัน แต่ -1 < 0 ดังนั้น [-1, 3] จึงแสดงผลก่อน [0, 2]
[-3, 2, 3]
[-2, 1, 3]
[-1, 0, 3]
[-1, 1, 2]
[-3, 0, 2, 3]
[-2, -1, 2, 3]
[-2, 0, 1, 3]   # [-2, -1, 2, 3] กับ [-2, 0, 1, 3] มีขนาดและตัวแรกสุดเท่ากัน แต่ตัวที่สอง -1 < 0 ดังนั้น [-2, -1, 2, 3] จึงแสดงผลก่อน [-2, 0, 1, 3]
[-1, 0, 1, 2]
[-3, -1, 1, 2, 3]
[-2, -1, 0, 2, 3]
[-3, -1, 0, 1, 2, 3]



Enter Input : 2/-2 3 1 -1 0 -3 2
[2]
[-1, 3]
[0, 2]
[-3, 2, 3]
[-2, 1, 3]
[-1, 0, 3]
[-1, 1, 2]
[-3, 0, 2, 3]
[-2, -1, 2, 3]
[-2, 0, 1, 3]
[-1, 0, 1, 2]
[-3, -1, 1, 2, 3]
[-2, -1, 0, 2, 3]
[-3, -1, 0, 1, 2, 3]



Enter Input : 2/1 0 2 -1
[2]
[0, 2]
[-1, 1, 2]
[-1, 0, 1, 2]


Enter Input : 3/-1 0 1 2
[1, 2]
[0, 1, 2]


Enter Input : 5/1 2 3 4
[1, 4]
[2, 3]


Enter Input : 4/-1 0 1 2
No Subset
'''
'''
Enter Input : 1/-5 -4 -3 -2 -1 0 1 2 3 4 5
[1]
[-4, 5]
[-3, 4]
[-2, 3]
[-1, 2]
[0, 1]
[-5, 1, 5]
[-5, 2, 4]
[-4, 0, 5]
[-4, 1, 4]
[-4, 2, 3]
[-3, -1, 5]
[-3, 0, 4]
[-3, 1, 3]
[-2, -1, 4]
[-2, 0, 3]
[-2, 1, 2]
[-1, 0, 2]
[-5, -3, 4, 5]
[-5, -2, 3, 5]
[-5, -1, 2, 5]
[-5, -1, 3, 4]
[-5, 0, 1, 5]
[-5, 0, 2, 4]
[-5, 1, 2, 3]
[-4, -3, 3, 5]
[-4, -2, 2, 5]
[-4, -2, 3, 4]
[-4, -1, 1, 5]
[-4, -1, 2, 4]
[-4, 0, 1, 4]
[-4, 0, 2, 3]
[-3, -2, 1, 5]
[-3, -2, 2, 4]
[-3, -1, 0, 5]
[-3, -1, 1, 4]
[-3, -1, 2, 3]
[-3, 0, 1, 3]
[-2, -1, 0, 4]
[-2, -1, 1, 3]
[-2, 0, 1, 2]
[-5, -4, 1, 4, 5]
[-5, -4, 2, 3, 5]
[-5, -3, 0, 4, 5]
[-5, -3, 1, 3, 5]
[-5, -3, 2, 3, 4]
[-5, -2, -1, 4, 5]
[-5, -2, 0, 3, 5]
[-5, -2, 1, 2, 5]
[-5, -2, 1, 3, 4]
[-5, -1, 0, 2, 5]
[-5, -1, 0, 3, 4]
[-5, -1, 1, 2, 4]
[-5, 0, 1, 2, 3]
[-4, -3, -1, 4, 5]
[-4, -3, 0, 3, 5]
[-4, -3, 1, 2, 5]
[-4, -3, 1, 3, 4]
[-4, -2, -1, 3, 5]
[-4, -2, 0, 2, 5]
[-4, -2, 0, 3, 4]
[-4, -2, 1, 2, 4]
[-4, -1, 0, 1, 5]
[-4, -1, 0, 2, 4]
[-4, -1, 1, 2, 3]
[-3, -2, -1, 2, 5]
[-3, -2, -1, 3, 4]
[-3, -2, 0, 1, 5]
[-3, -2, 0, 2, 4]
[-3, -2, 1, 2, 3]
[-3, -1, 0, 1, 4]
[-3, -1, 0, 2, 3]
[-2, -1, 0, 1, 3]
[-5, -4, -2, 3, 4, 5]
[-5, -4, -1, 2, 4, 5]
[-5, -4, 0, 1, 4, 5]
[-5, -4, 0, 2, 3, 5]
[-5, -4, 1, 2, 3, 4]
[-5, -3, -2, 2, 4, 5]
[-5, -3, -1, 1, 4, 5]
[-5, -3, -1, 2, 3, 5]
[-5, -3, 0, 1, 3, 5]
[-5, -3, 0, 2, 3, 4]
[-5, -2, -1, 0, 4, 5]
[-5, -2, -1, 1, 3, 5]
[-5, -2, -1, 2, 3, 4]
[-5, -2, 0, 1, 2, 5]
[-5, -2, 0, 1, 3, 4]
[-5, -1, 0, 1, 2, 4]
[-4, -3, -2, 1, 4, 5]
[-4, -3, -2, 2, 3, 5]
[-4, -3, -1, 0, 4, 5]
[-4, -3, -1, 1, 3, 5]
[-4, -3, -1, 2, 3, 4]
[-4, -3, 0, 1, 2, 5]
[-4, -3, 0, 1, 3, 4]
[-4, -2, -1, 0, 3, 5]
[-4, -2, -1, 1, 2, 5]
[-4, -2, -1, 1, 3, 4]
[-4, -2, 0, 1, 2, 4]
[-4, -1, 0, 1, 2, 3]
[-3, -2, -1, 0, 2, 5]
[-3, -2, -1, 0, 3, 4]
[-3, -2, -1, 1, 2, 4]
[-3, -2, 0, 1, 2, 3]
[-5, -4, -3, 1, 3, 4, 5]
[-5, -4, -2, 0, 3, 4, 5]
[-5, -4, -2, 1, 2, 4, 5]
[-5, -4, -1, 0, 2, 4, 5]
[-5, -4, -1, 1, 2, 3, 5]
[-5, -4, 0, 1, 2, 3, 4]
[-5, -3, -2, -1, 3, 4, 5]
[-5, -3, -2, 0, 2, 4, 5]
[-5, -3, -2, 1, 2, 3, 5]
[-5, -3, -1, 0, 1, 4, 5]
[-5, -3, -1, 0, 2, 3, 5]
[-5, -3, -1, 1, 2, 3, 4]
[-5, -2, -1, 0, 1, 3, 5]
[-5, -2, -1, 0, 2, 3, 4]
[-4, -3, -2, -1, 2, 4, 5]
[-4, -3, -2, 0, 1, 4, 5]
[-4, -3, -2, 0, 2, 3, 5]
[-4, -3, -2, 1, 2, 3, 4]
[-4, -3, -1, 0, 1, 3, 5]
[-4, -3, -1, 0, 2, 3, 4]
[-4, -2, -1, 0, 1, 2, 5]
[-4, -2, -1, 0, 1, 3, 4]
[-3, -2, -1, 0, 1, 2, 4]
[-5, -4, -3, -1, 2, 3, 4, 5]
[-5, -4, -3, 0, 1, 3, 4, 5]
[-5, -4, -2, -1, 1, 3, 4, 5]
[-5, -4, -2, 0, 1, 2, 4, 5]
[-5, -4, -1, 0, 1, 2, 3, 5]
[-5, -3, -2, -1, 0, 3, 4, 5]
[-5, -3, -2, -1, 1, 2, 4, 5]
[-5, -3, -2, 0, 1, 2, 3, 5]
[-5, -3, -1, 0, 1, 2, 3, 4]
[-4, -3, -2, -1, 0, 2, 4, 5]
[-4, -3, -2, -1, 1, 2, 3, 5]
[-4, -3, -2, 0, 1, 2, 3, 4]
[-5, -4, -3, -2, 1, 2, 3, 4, 5]
[-5, -4, -3, -1, 0, 2, 3, 4, 5]
[-5, -4, -2, -1, 0, 1, 3, 4, 5]
[-5, -3, -2, -1, 0, 1, 2, 4, 5]
[-4, -3, -2, -1, 0, 1, 2, 3, 5]
[-5, -4, -3, -2, 0, 1, 2, 3, 4, 5]


'''



inp = input("Enter Input : ").split('/')
result = int(inp[0])
sett = [int(x) for x in inp[1].split()]


def bubble_sort(l):
    for last in range(len(l)-1, 0,-1):
        swaped = False
        for i in range(last):
            if len(l[i]) > len(l[i+1]):
                l[i], l[i+1] = l[i+1], l[i]
                swaped = True
        if not swaped:
            break
    return l

# def subset(array, num):
#     result = []
#     def find(arr, num, path=()):
#         if not arr:
#             return
#         if arr[0] == num:
#             result.append(path + (arr[0],))
#         else:
#             find(arr[1:], num - arr[0], path + (arr[0],))
#         find(arr[1:], num, path)
#     find(array, num)
#     return result
# a = subset(sett,result)
# print(a)

def subsetsum(array,num):
    all = []
    if num == 0 or num < 1:
        return None
    elif len(array) == 0:
        return None
    else:
        if array[0] == num:
            all.append(array[0])
            return all
        else:
            with_v = subsetsum(array[1:],(num - array[0]))
            
            if with_v:
                return [array[0]] + with_v
            else:
                return subsetsum(array[1:],num)

print(subsetsum(sett,result))